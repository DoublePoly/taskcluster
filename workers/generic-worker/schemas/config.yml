$schema: "/schemas/common/metaschema.json#"
$id: "/schemas/generic-worker/config.json#"
title: Config file for generic-worker
description: |-
  This schema defines the structure of the generic-worker.config file.
type: object
required:
  - accessToken
  - clientId
  - ed25519SigningKeyLocation
  - rootURL
  - workerId
  - workerType
additionalProperties: false
properties:
  accessToken:
    title: Taskcluster Access Token
    description: |-
      Taskcluster access token used by generic worker
      to talk to taskcluster queue.
    type: string
  availabilityZone:
    title: Availability Zone (EC2)
    description: |-
      The EC2 availability zone of the worker.
    type: string
  cachesDir:
    title: Caches Directory
    description: |-
      The directory where task caches should be stored on
      the worker. The directory will be created if it does
      not exist. This may be a relative path to the
      current directory, or an absolute path.
    type: string
    default: caches
  certificate:
    title: Taskcluster Certificate
    description: |-
      Taskcluster certificate, when using temporary
      credentials only.
    type: string
  checkForNewDeploymentEverySecs:
    title: Check For New Deployment (every X seconds)
    description: |-
      The number of seconds between consecutive calls
      to the provisioner, to check if there has been a
      new deployment of the current worker type. If a
      new deployment is discovered, worker will shut
      down. See deploymentId property.
    type: number
    default: 1800
  cleanUpTaskDirs:
    title: Clean Up Task Directories
    description: |-
      Whether to delete the home directories of the task
      users after the task completes. Normally you would
      want to do this to avoid filling up disk space,
      but for one-off troubleshooting, it can be useful
      to (temporarily) leave home directories in place.
      Accepted values: true or false.
    type: boolean
    default: true
  clientId:
    title: Taskcluster Client ID
    description: |-
      Taskcluster client ID used by generic worker to
      talk to taskcluster queue.
    type: string
  deploymentId:
    title: 
    description: |-
      If running with --configure-for-aws, then between
      tasks, at a chosen maximum frequency (see
      checkForNewDeploymentEverySecs property), the
      worker will query the provisioner to get the
      updated worker type definition. If the deploymentId
      in the config of the worker type definition is
      different to the worker's current deploymentId, the
      worker will shut itself down. See
      https://bugzil.la/1298010
    type: string
  disableReboots:
    title: 
    description: |-
      If true, no system reboot will be initiated by
      generic-worker program, but it will still return
      with exit code 67 if the system needs rebooting.
      This allows custom logic to be executed before
      rebooting, by patching run-generic-worker.bat
      script to check for exit code 67, perform steps
      (such as formatting a hard drive) and then
      rebooting in the run-generic-worker.bat script.
    type: boolean
    default: false
  downloadsDir:
    title: 
    description: |-
      The directory to cache downloaded files for
      populating preloaded caches and readonly mounts. The
      directory will be created if it does not exist. This
      may be a relative path to the current directory, or
      an absolute path.
    default: downloads
    type: string
    default: downloads
  ed25519SigningKeyLocation:
    title: 
    description: |-
      The ed25519 signing key for signing artifacts with.
    type: string
  idleTimeoutSecs:
    title: 
    description: |-
      How many seconds to wait without getting a new
      task to perform, before the worker process exits.
      An integer, >= 0. A value of 0 means "never reach
      the idle state" - i.e. continue running
      indefinitely. See also shutdownMachineOnIdle.
    default: 0
    type: number
  instanceId:
    title: 
    description: |-
      The EC2 instance ID of the worker. Used by chain of trust.
    type: string
  instanceType:
    title: 
    description: |-
      The EC2 instance Type of the worker. Used by chain of trust.
    type: string
  livelogExecutable:
    title: 
    description: |-
      Filepath of LiveLog executable to use; see
      https://github.com/taskcluster/livelog
    default: livelog
    type: string
  numberOfTasksToRun:
    title: 
    description: |-
      If zero, run tasks indefinitely. Otherwise, after
      this many tasks, exit.
    default: 0
    type: integer
  privateIP:
    title: 
    description: |-
      The private IP of the worker, used by chain of trust.
    type: string
    format: ipv4
  provisionerId:
    title: 
    description: |-
      The taskcluster provisioner which is taking care
      of provisioning environments with generic-worker
      running on them.
    default: test-provisioner
    type: string
  publicIP:
    title: 
    description: |-
      The IP address for VNC access.  Also used by chain of
      trust when present.
    type: string
    format: ipv4
  region:
    title: 
    description: |-
      The EC2 region of the worker. Used by chain of trust.
    type: string
  requiredDiskSpaceMegabytes:
    title: 
    description: |-
      The garbage collector will ensure at least this
      number of megabytes of disk space are available
      when each task starts. If it cannot free enough
      disk space, the worker will shut itself down.
    default: 10240
    type: number
  rootURL:
    title: 
    description: |-
      The root URL of the taskcluster deployment to which
      clientId and accessToken grant access. For example,
      'https://community-tc.services.mozilla.com/'.
    type: string
    format: uri
  runAfterUserCreation:
    title: 
    description: |-
      A string, that if non-empty, will be treated as a
      command to be executed as the newly generated task
      user, after the user has been created, the machine
      has rebooted and the user has logged in, but before
      a task is run as that user. This is a way to
      provide generic user initialisation logic that
      should apply to all generated users (and thus all
      tasks) and be run as the task user itself. This
      option does *not* support running a command as
      Administrator. Furthermore, even if
      runTasksAsCurrentUser is true, the script will still
      be executed as the task user, rather than the
      current user (that runs the generic-worker process).
    type: string
  sentryProject:
    title: 
    description: |-
      The project name used in https://sentry.io for
      reporting worker crashes. Permission to publish
      crash reports is granted via the scope
      auth:sentry:<sentryProject>. If the taskcluster
      client (see clientId property above) does not
      posses this scope, no crash reports will be sent.
      Similarly, if this property is not specified or
      is the empty string, no reports will be sent.
    default: generic-worker
    type: string
  shutdownMachineOnIdle:
    title: 
    description: |-
      If true, when the worker is deemed to have been
      idle for enough time (see idleTimeoutSecs) the
      worker will issue an OS shutdown command. If false,
      the worker process will simply terminate, but the
      machine will not be shut down.
    default: false
    type: boolean
  shutdownMachineOnInternalError:
    title: 
    description: |-
      If true, if the worker encounters an unrecoverable
      error (such as not being able to write to a
      required file) it will shutdown the host
      computer. Note this is generally only desired
      for machines running in production, such as on AWS
      EC2 spot instances. Use with caution!
    default: false
    type: boolean
  taskclusterProxyExecutable:
    title: 
    description: |-
      Filepath of taskcluster-proxy executable to use; see
      https://github.com/taskcluster/taskcluster/tree/main/tools/taskcluster-proxy
    default: taskcluster-proxy
    type: string
  taskclusterProxyPort:
    title: 
    description: |-
      Port number for taskcluster-proxy HTTP requests.
    default: 80
    type: integer
  tasksDir:
    title: 
    description: |-
      The location where task directories should be
      created on the worker.
    default: ${DEFAULT_TASKS_DIR}
    type: string
  workerGroup:
    title: 
    description: |-
      Typically this would be an aws region - an
      identifier to uniquely identify which pool of
      workers this worker logically belongs to.
    default: test-worker-group
    type: string
  workerId:
    title: 
    description: |-
      A unique name for the worker.
    type: string
  workerLocation:
    title: 
    description: |-
      If a non-empty string, task commands will have environment variable
      TASKCLUSTER_WORKER_LOCATION set to the value provided.
      Otherwise TASKCLUSTER_WORKER_LOCATION environment
      variable will not be implicitly set in task commands.
    default: ""
    type: string
  workerType:
    title: 
    description: |-
      This should match a worker_type managed by the
      specified provisioner.
    type: string
  workerTypeMetadata:
    title: 
    description: |-
      This arbitrary json blob will be included at the
      top of each task log. Providing information here,
      such as a URL to the code/config used to set up the
      worker type will mean that people running tasks on
      the worker type will have more information about how
      it was set up (for example what has been installed on
      the machine).
    type: object
  wstAudience:
    title: 
    description: |-
      The audience value for which to request websocktunnel
      credentials, identifying a set of WST servers this
      worker could connect to.  Optional if not using websocktunnel
      to expose live logs.
    type: string
  wstServerURL:
    title: 
    description: |-
      The URL of the websocktunnel server with which to expose
      live logs.  Optional if not using websocktunnel to expose
      live logs.
    type: string
    format: uri
